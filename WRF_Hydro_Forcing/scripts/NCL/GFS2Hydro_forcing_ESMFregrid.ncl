;----------------------------------------------------------------------
; WRF_HYDRO_sub_domain_forcing_regridder_ESMFregrid.ncl
;
;
; Project : STEP
;
; Purpose : This is a ncl program to perform remapping of various WRF-based 
;           short-term forecast simulation data to Dave's hydro simulation
;           domain. 
;
;           Before running this program, run ESMF_genWgts_WRF_HYDRO_forcing.ncl
;           to generate weights for conserve and bilinear interpolation to
;           regrid source data over destination domain.
;           Then this program reads wgtFileName_conserve and wgtFileName_bilinear
;           generated by ESMF_genWgts_WRF_HYDRO_forcing.ncl. 
;           (e.g., BASERUN_d03_to_WRF_HYDRO_weight_conserve.nc and BASERUN_d03_to_WRF_HYDRO_weight_bilinear.nc)
;
; Remarks : (1) Assumes that wrfout files are hourly output. (-- important for
;               computing rainrate.
;           (2) ESMF regridding performed with "conserve" option for precipitation
;               and SWE. All other variables use bilinear option for remapping. 
;
;
; Usage   : ncl 'RUNNAME="BASELINE"' 'wrf_domain_name="d03"' \
;               'srcfilename="wrfout_d03*"' WRF_HYDRO_sub_domain_forcing_regridder_ESMFregrid.ncl 
;
;           RUNNAME     = name of wrf run.  This is used for the input path and the weight filename.
;           wrf_domain_name = domain name (d01, d02, d03) which is used to identify the weight file.
;           srcfilename = filename pattern of the souce wrfout files. Should have matching domain number.
;                         e.g., "wrfout_d01_2007-09-01_00_00_00.nc", "wrfout_d01_2007*.nc"
;                               "wrfout_d01_2007-09-0[1-3].nc"
; 
; Kyoko Ikeda 21 March 2013
;
;----------------------------------------------------------------------
load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/gsn_code.ncl"
load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/gsn_csm.ncl"
load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/contributed.ncl"
load "$NCARG_ROOT/lib/ncarg/nclscripts/contrib/ut_string.ncl"
;load "./ESMF_regridding.ncl"
load "$NCARG_ROOT/lib/ncarg/nclscripts/esmf/ESMF_regridding.ncl"

begin

;----------------------------------------------------------------------
; Source, destination , and weight filenames for generating 
; ESMF_regridding weights
;----------------------------------------------------------------------
  wgtFileName_conserve =  wgtFileName_in

  if ( .not.isfilepresent( dstGridName ) ) then
     print( " ... source grid file not found : "+ dstGridName )
     exit
  end if

;----------------------------------------------------------------------
; read in source and destination grid netCDF files
;----------------------------------------------------------------------

;---  destination grid data
  dstfile     = addfile( dstGridName ,"r")
  dlon3d=dstfile->XLONG_M   ;(USER'S NEED TO CONFIRM THIS VARIABLE IS WHAT IS IN THEIR DATA FILE)
  dlat3d=dstfile->XLAT_M   ;(USER'S NEED TO CONFIRM THIS VARIABLE IS WHAT IS IN THEIR DATA FILE)

  dlon2d=dlon3d(0,:,:)
  dlat2d=dlat3d(0,:,:)

  dims=dimsizes(dlat2d)
  ;Get this from the forcing engine config file
  ;outFile = getenv("outFile")

;
;dg NEED TO EDIT INPUT DATA TIME INTERVAL HERE...
;
  dt=3600.0   ;forcing data timestep in seconds... (USER'S MUST ENTER/CONFIRM THIS IS SET TO DATA TIMESTEP (or INTERVAL))
  flag=0    ;WRF - flag for removing accum precip... (DO NOT CHANGE THIS)

;----------------------------------------------------------------------
; Open source data files to be regridded...
;----------------------------------------------------------------------
;
;dg NEED TO EDIT INPUT AND OUTPUT DIRECTORIES HERE...
;
  ;get this from the forcing engine config file
  ;outdir  = "./output_files/"      ; directory where output forcing data will be placed. set to dirm for overwriting the original file
  if(.not. isfilepresent(outdir)) then
     system("mkdir "+outdir)
  end if
  ;get this from the forcing engine config file
  ;srcfilename = getenv ("srcFile")
  datfils = systemfunc ("/bin/ls -1 "+srcfilename)    ;list of file names
  num_datfils     = dimsizes(datfils)

   wgtFileName = wgtFileName_in

        opt                = True
        opt@WgtFileName    = wgtFileName
        opt@CopyVarAtts    = True
        opt@CopyVarCoords  = False

        opt@Debug          = True



  do ifil = 0,num_datfils-1,1   ; loop through datafiles one at a time
   
      datfile = addfile( datfils(ifil), "r")

      print( " ... Open input file : "+ datfils(ifil) )
   
  
      names  = getfilevarnames(datfile) 

     ;----------------------------------------------------------------------
     ; Temporary output
     ;----------------------------------------------------------------------
      ncdf= addfile(outdir+"/"+outFile,"c")
      system("rm -f test.nc")
      ncdf->lat = dlat2d   ;output lat
      ncdf->lon = dlon2d   ;output lon

   
     ;----------------------------------------------------------------------
     ;  Processing...no further mods should be required...
     ;----------------------------------------------------------------------
     ;do v=6,6
   
;           print("lv_HTGL2 = "+ datfile->lv_HTGL2) 
           ; print("lv_HTGL5 = "+ datfile->lv_HTGL5) 
           ; print("lv_HTGL9 = "+ datfile->lv_HTGL9) 

           T2D = ESMF_regrid_with_weights(datfile->TMP_P0_L103_GLL0(0,:,:) , wgtFileName, opt)
           ncdf->T2D = T2D
           Q2D = ESMF_regrid_with_weights(datfile->SPFH_P0_L103_GLL0(0,:,:) , wgtFileName, opt)
           ncdf->Q2D = Q2D
;10 meter wind
           U2D = ESMF_regrid_with_weights(datfile->UGRD_P0_L103_GLL0(0,:,:) , wgtFileName, opt)
           ncdf->U2D = U2D
           V2D = ESMF_regrid_with_weights(datfile->VGRD_P0_L103_GLL0(0,:,:) , wgtFileName, opt)
           ncdf->V2D = V2D

           PSFC = ESMF_regrid_with_weights(datfile->PRES_P0_L1_GLL0 , wgtFileName, opt)
           ncdf->PSFC = PSFC

           RAINRATE = PSFC
           RAINRATE = 0.0
           RAINRATE@description = "RAINRATE"
           RAINRATE@units       = "mm s^-1"
           do i = 0, dimsizes( names ) - 1
              if(names(i) .eq. "PRATE_P8_L1_GLL0_avg") then
                  RAINRATE = ESMF_regrid_with_weights(datfile->PRATE_P8_L1_GLL0_avg, wgtFileName, opt) 
              end if
              if(names(i) .eq. "PRATE_P8_L1_GLL0_avg6h") then
                  RAINRATE = ESMF_regrid_with_weights(datfile->PRATE_P8_L1_GLL0_avg6h, wgtFileName, opt) 
              end if
              if(names(i) .eq. "PRATE_P8_L1_GLL0_avg3h") then
                  RAINRATE = ESMF_regrid_with_weights(datfile->PRATE_P8_L1_GLL0_avg3h, wgtFileName, opt) 
              end if
              if(names(i) .eq. "DLWRF_P8_L1_GLL0_avg") then
                  LWDOWN = ESMF_regrid_with_weights(datfile->DLWRF_P8_L1_GLL0_avg, wgtFileName, opt) 
                  ncdf->LWDOWN = LWDOWN
              end if
              if(names(i) .eq. "DLWRF_P8_L1_GLL0_avg3h") then
                  LWDOWN = ESMF_regrid_with_weights(datfile->DLWRF_P8_L1_GLL0_avg3h, wgtFileName, opt) 
                  ncdf->LWDOWN = LWDOWN
              end if
              if(names(i) .eq. "DLWRF_P8_L1_GLL0_avg6h") then
                  LWDOWN = ESMF_regrid_with_weights(datfile->DLWRF_P8_L1_GLL0_avg6h, wgtFileName, opt) 
                  ncdf->LWDOWN = LWDOWN
              end if
              if(names(i) .eq. "DSWRF_P8_L1_GLL0_avg") then
                  SWDOWN = ESMF_regrid_with_weights(datfile->DSWRF_P8_L1_GLL0_avg , wgtFileName, opt) 
                  ncdf->SWDOWN = SWDOWN
              end if
              if(names(i) .eq. "DSWRF_P8_L1_GLL0_avg3h") then
                  SWDOWN = ESMF_regrid_with_weights(datfile->DSWRF_P8_L1_GLL0_avg3h , wgtFileName, opt) 
                  ncdf->SWDOWN = SWDOWN
              end if
              if(names(i) .eq. "DSWRF_P8_L1_GLL0_avg6h") then
                  SWDOWN = ESMF_regrid_with_weights(datfile->DSWRF_P8_L1_GLL0_avg6h , wgtFileName, opt) 
                  ncdf->SWDOWN = SWDOWN
              end if
           end do

           ncdf->RAINRATE = RAINRATE

           ; WEASD currently not needed, omit for now (8/26/2015)
           ;WEASD = ESMF_regrid_with_weights(datfile->WEASD_P0_L1_GLL0, wgtFileName, opt) 
           ;ncdf->WEASD = WEASD
     
   
   end do   ; end do for file loop


end
