;----------------------------------------------------------------------
; WRF_HYDRO_sub_domain_forcing_regridder_ESMFregrid.ncl
;
;
; Project : STEP
;
; Purpose : This is a ncl program to perform remapping of various WRF-based 
;           short-term forecast simulation data to Dave's hydro simulation
;           domain. 
;
;           Before running this program, run ESMF_genWgts_WRF_HYDRO_forcing.ncl
;           to generate weights for conserve and bilinear interpolation to
;           regrid source data over destination domain.
;           Then this program reads wgtFileName_conserve and wgtFileName_bilinear
;           generated by ESMF_genWgts_WRF_HYDRO_forcing.ncl. 
;           (e.g., BASERUN_d03_to_WRF_HYDRO_weight_conserve.nc and BASERUN_d03_to_WRF_HYDRO_weight_bilinear.nc)
;
; Remarks : (1) Assumes that wrfout files are hourly output. (-- important for
;               computing rainrate.
;           (2) ESMF regridding performed with "conserve" option for precipitation
;               and SWE. All other variables use bilinear option for remapping. 
;
;
; Usage   : ncl 'RUNNAME="BASELINE"' 'wrf_domain_name="d03"' \
;               'srcfilename="wrfout_d03*"' WRF_HYDRO_sub_domain_forcing_regridder_ESMFregrid.ncl 
;
;           RUNNAME     = name of wrf run.  This is used for the input path and the weight filename.
;           wrf_domain_name = domain name (d01, d02, d03) which is used to identify the weight file.
;           srcfilename = filename pattern of the souce wrfout files. Should have matching domain number.
;                         e.g., "wrfout_d01_2007-09-01_00_00_00.nc", "wrfout_d01_2007*.nc"
;                               "wrfout_d01_2007-09-0[1-3].nc"
; 
; Kyoko Ikeda 21 March 2013
;
;----------------------------------------------------------------------
load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/gsn_code.ncl"
load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/gsn_csm.ncl"
load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/contributed.ncl"
load "$NCARG_ROOT/lib/ncarg/nclscripts/contrib/ut_string.ncl"
;load "./ESMF_regridding.ncl"
load "$NCARG_ROOT/lib/ncarg/nclscripts/esmf/ESMF_regridding.ncl"

begin

;----------------------------------------------------------------------
; Source, destination , and weight filenames for generating 
; ESMF_regridding weights
;----------------------------------------------------------------------
    wgtFileName_conserve =  wgtFileName_in

  if ( .not.isfilepresent( dstGridName ) ) then
     print( " ... source grid file not found : "+ dstGridName )
     exit
  end if

;----------------------------------------------------------------------
; read in source and destination grid netCDF files
;----------------------------------------------------------------------

;---  destination grid data
  dstfile     = addfile( dstGridName ,"r")
  dlon3d=dstfile->XLONG_M   ;(USER'S NEED TO CONFIRM THIS VARIABLE IS WHAT IS IN THEIR DATA FILE)
  dlat3d=dstfile->XLAT_M   ;(USER'S NEED TO CONFIRM THIS VARIABLE IS WHAT IS IN THEIR DATA FILE)

  dlon2d=dlon3d(0,:,:)
  dlat2d=dlat3d(0,:,:)

  dims=dimsizes(dlat2d)
  ;Replace with entry from parm/config file
  ;outFile = getenv("outFile")

;
;dg NEED TO EDIT INPUT DATA TIME INTERVAL HERE...
;
  dt=3600.0   ;forcing data timestep in seconds... (USER'S MUST ENTER/CONFIRM THIS IS SET TO DATA TIMESTEP (or INTERVAL))
  flag=0    ;WRF - flag for removing accum precip... (DO NOT CHANGE THIS)

;----------------------------------------------------------------------
; Open source data files to be regridded...
;----------------------------------------------------------------------
;
;dg NEED TO EDIT INPUT AND OUTPUT DIRECTORIES HERE...
;

  ;Replace with entry from parm/config file
  ;srcfilename = getenv ("srcFile")
  datfils = systemfunc ("/bin/ls -1 "+srcfilename)    ;list of file names
  num_datfils     = dimsizes(datfils)

   wgtFileName = wgtFileName_in

        opt                = True
        opt@WgtFileName    = wgtFileName
        opt@CopyVarAtts    = True
        opt@CopyVarCoords  = False

        opt@Debug          = True



  do ifil = 0,num_datfils-1,1   ; loop through datafiles one at a time

   
      datfile = addfile( datfils(ifil), "r")

      print( " ... Open input file : "+ datfils(ifil) )
  
;      if(.not. isfilevar(datfile,"VAR_209_6_9_P0_L102_GLL0")) then
;           exit()
;      end if 
  

     ;----------------------------------------------------------------------
     ; Temporary output
     ;----------------------------------------------------------------------
      if(isfilepresent(outFile) ) then
         system("rm -f "+outFile)
      end if

      ncdf= addfile(outFile,"c")

   
     ;----------------------------------------------------------------------
     ;  Processing...no further mods should be required...
     ;----------------------------------------------------------------------
     ;do v=6,6
   

           precip_rate = ESMF_regrid_with_weights(datfile->VAR_209_6_9_P0_L102_GLL0 , wgtFileName, opt)
           precip_rate = precip_rate / 3600.0
           precip_rate@description = "RAINRATE"
           precip_rate@units       = "mm s^-1"
           ncdf->precip_rate = precip_rate

   
   end do   ; end do for file loop


end
